package view;

import controller.PokemonController;
import controller.TablePokemonController;
import core.QueryExecutor;
import java.awt.event.ItemEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import model.ComboBoxItem;
import model.Pokemon;

/**
 *
 * @author ZAFL
 */
public class FramePokemon extends javax.swing.JInternalFrame {

  private boolean isInitialSetup = true;

  boolean isUpdate;
  int nextID;
  QueryExecutor qe = new QueryExecutor();
  PokemonController pc = new PokemonController();
  TablePokemonController tpc = new TablePokemonController();

  public FramePokemon() {
    initComponents();
    // borderless
    ((BasicInternalFrameUI) this.getUI()).setNorthPane(null);
    ((BasicInternalFrameUI) this.getUI()).setEastPane(null);
    ((BasicInternalFrameUI) this.getUI()).setSouthPane(null);
    ((BasicInternalFrameUI) this.getUI()).setWestPane(null);
    this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));

    tbPokemon.setModel(tpc);
    int col[] = {0, 7, 8};
    for (int i : col) {
      tbPokemon.getColumnModel().getColumn(i).setMinWidth(0);
      tbPokemon.getColumnModel().getColumn(i).setMaxWidth(0);
      tbPokemon.getColumnModel().getColumn(i).setWidth(0);
    }

    addComboBoxItem(cbTipe, "tipe", true);

    getID();
    addComboBoxItem(cbTipe1, "tipe", false);
    addComboBoxItem(cbTipe2, "tipe", false);
    addComboBoxItem(cbKemampuan1, "kemampuan", false);
    addComboBoxItem(cbKemampuan2, "kemampuan", false);

    lblTipePokemonId.setVisible(false);
    tfTipePokemonID.setVisible(false);
    lblKemampuanPokemonId.setVisible(false);
    tfKemampuanPokemonID.setVisible(false);

  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    dlgPokemon = new javax.swing.JDialog();
    labelJudulDialog = new javax.swing.JLabel();
    jLabel5 = new javax.swing.JLabel();
    tfID = new javax.swing.JTextField();
    jLabel6 = new javax.swing.JLabel();
    tfPokedexID = new javax.swing.JTextField();
    jLabel7 = new javax.swing.JLabel();
    tfNama = new javax.swing.JTextField();
    jLabel8 = new javax.swing.JLabel();
    tfTinggi = new javax.swing.JTextField();
    jLabel9 = new javax.swing.JLabel();
    tfBerat = new javax.swing.JTextField();
    jLabel10 = new javax.swing.JLabel();
    cbTipe1 = new javax.swing.JComboBox<>();
    jLabel11 = new javax.swing.JLabel();
    cbTipe2 = new javax.swing.JComboBox<>();
    jLabel12 = new javax.swing.JLabel();
    cbKemampuan1 = new javax.swing.JComboBox<>();
    jLabel13 = new javax.swing.JLabel();
    cbKemampuan2 = new javax.swing.JComboBox<>();
    jPanel2 = new javax.swing.JPanel();
    btnSimpan = new javax.swing.JButton();
    btnClear = new javax.swing.JButton();
    tfTipePokemonID = new javax.swing.JTextField();
    tfKemampuanPokemonID = new javax.swing.JTextField();
    lblTipePokemonId = new javax.swing.JLabel();
    lblKemampuanPokemonId = new javax.swing.JLabel();
    popUpTabel = new javax.swing.JPopupMenu();
    menuEdit = new javax.swing.JMenuItem();
    menuHapus = new javax.swing.JMenuItem();
    scrollPane = new javax.swing.JScrollPane();
    tbPokemon = new javax.swing.JTable();
    jPanel1 = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    btnTambah = new javax.swing.JButton();
    jLabel2 = new javax.swing.JLabel();
    tfCariNama = new javax.swing.JTextField();
    cbTipe = new javax.swing.JComboBox<>();
    jLabel3 = new javax.swing.JLabel();

    dlgPokemon.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    dlgPokemon.setMinimumSize(new java.awt.Dimension(450, 630));
    dlgPokemon.setPreferredSize(new java.awt.Dimension(450, 630));

    labelJudulDialog.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
    labelJudulDialog.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    labelJudulDialog.setText("Pok√©mon");

    jLabel5.setText("ID");

    tfID.setEnabled(false);

    jLabel6.setText("Pokedex ID");

    jLabel7.setText("Nama");

    jLabel8.setText("Tinggi");

    jLabel9.setText("Berat");

    jLabel10.setText("Tipe ke-1");

    jLabel11.setText("Tipe ke-2");

    jLabel12.setText("Kemampuan ke-1");

    jLabel13.setText("Kemampuan ke-2");

    btnSimpan.setText("Simpan");
    btnSimpan.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnSimpanActionPerformed(evt);
      }
    });

    btnClear.setText("Clear");
    btnClear.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnClearActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addContainerGap(97, Short.MAX_VALUE)
        .addComponent(btnSimpan)
        .addGap(100, 100, 100)
        .addComponent(btnClear)
        .addContainerGap(97, Short.MAX_VALUE))
    );
    jPanel2Layout.setVerticalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
        .addContainerGap(23, Short.MAX_VALUE)
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(btnClear)
          .addComponent(btnSimpan))
        .addGap(18, 18, 18))
    );

    lblTipePokemonId.setText("Tipe Pokemon ID");

    lblKemampuanPokemonId.setText("Kemampuan Pokemon ID");

    javax.swing.GroupLayout dlgPokemonLayout = new javax.swing.GroupLayout(dlgPokemon.getContentPane());
    dlgPokemon.getContentPane().setLayout(dlgPokemonLayout);
    dlgPokemonLayout.setHorizontalGroup(
      dlgPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(dlgPokemonLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(dlgPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(labelJudulDialog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dlgPokemonLayout.createSequentialGroup()
        .addGap(0, 0, Short.MAX_VALUE)
        .addGroup(dlgPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(dlgPokemonLayout.createSequentialGroup()
            .addGroup(dlgPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(jLabel12)
              .addComponent(jLabel6)
              .addComponent(jLabel5)
              .addComponent(jLabel7)
              .addComponent(jLabel8)
              .addComponent(jLabel9)
              .addComponent(jLabel10)
              .addComponent(jLabel11)
              .addComponent(jLabel13))
            .addGroup(dlgPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(dlgPokemonLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(tfID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
              .addGroup(dlgPokemonLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(tfPokedexID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
              .addGroup(dlgPokemonLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(dlgPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addComponent(tfTinggi, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(tfNama, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(tfBerat, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
              .addGroup(dlgPokemonLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(dlgPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addComponent(cbTipe2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(cbTipe1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(cbKemampuan1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(cbKemampuan2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))))
          .addGroup(dlgPokemonLayout.createSequentialGroup()
            .addGroup(dlgPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(lblTipePokemonId)
              .addComponent(lblKemampuanPokemonId))
            .addGap(18, 18, 18)
            .addGroup(dlgPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(tfKemampuanPokemonID, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(tfTipePokemonID, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(60, 60, 60)))
        .addGap(77, 77, 77))
    );
    dlgPokemonLayout.setVerticalGroup(
      dlgPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(dlgPokemonLayout.createSequentialGroup()
        .addGap(25, 25, 25)
        .addComponent(labelJudulDialog)
        .addGap(35, 35, 35)
        .addGroup(dlgPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel5)
          .addComponent(tfID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(dlgPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel6)
          .addComponent(tfPokedexID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(dlgPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel7)
          .addComponent(tfNama, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(dlgPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel8)
          .addComponent(tfTinggi, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(dlgPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel9)
          .addComponent(tfBerat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(dlgPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel10)
          .addComponent(cbTipe1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(dlgPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(cbTipe2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel11))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(dlgPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(cbKemampuan1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel12))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(dlgPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(cbKemampuan2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel13))
        .addGap(18, 18, 18)
        .addGroup(dlgPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(tfTipePokemonID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(lblTipePokemonId))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(dlgPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(tfKemampuanPokemonID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(lblKemampuanPokemonId))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(18, Short.MAX_VALUE))
    );

    popUpTabel.setInvoker(tbPokemon);

    menuEdit.setText("Edit");
    menuEdit.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        menuEditActionPerformed(evt);
      }
    });
    popUpTabel.add(menuEdit);

    menuHapus.setText("Hapus");
    menuHapus.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        menuHapusActionPerformed(evt);
      }
    });
    popUpTabel.add(menuHapus);

    setMinimumSize(new java.awt.Dimension(960, 540));
    setPreferredSize(new java.awt.Dimension(960, 540));

    tbPokemon.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {

      },
      new String [] {

      }
    ));
    tbPokemon.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseReleased(java.awt.event.MouseEvent evt) {
        tbPokemonMouseReleased(evt);
      }
    });
    scrollPane.setViewportView(tbPokemon);

    jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
    jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel1.setText("Daftar Pok√©mon");

    btnTambah.setText("Tambah");
    btnTambah.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnTambahActionPerformed(evt);
      }
    });

    jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
    jLabel2.setText("Cari nama");

    tfCariNama.addCaretListener(new javax.swing.event.CaretListener() {
      public void caretUpdate(javax.swing.event.CaretEvent evt) {
        tfCariNamaCaretUpdate(evt);
      }
    });

    cbTipe.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        cbTipeItemStateChanged(evt);
      }
    });

    jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
    jLabel3.setText("Tipe");

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(0, 160, Short.MAX_VALUE)
            .addComponent(btnTambah)
            .addGap(60, 60, 60)
            .addComponent(jLabel2)
            .addGap(18, 18, 18)
            .addComponent(tfCariNama, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(60, 60, 60)
            .addComponent(jLabel3)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(cbTipe, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 160, Short.MAX_VALUE)))
        .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel1)
        .addGap(36, 36, 36)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel2)
          .addComponent(tfCariNama, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(cbTipe, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel3))
        .addGap(35, 35, 35))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(scrollPane))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
    showDialog("Tambah Pok√©mon", false);
  }//GEN-LAST:event_btnTambahActionPerformed

  private void cbTipeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbTipeItemStateChanged
    if (!isInitialSetup && evt.getStateChange() == ItemEvent.SELECTED) {
      handleFilters();
    }
    isInitialSetup = false;
  }//GEN-LAST:event_cbTipeItemStateChanged

  private void tfCariNamaCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tfCariNamaCaretUpdate
    handleFilters();
  }//GEN-LAST:event_tfCariNamaCaretUpdate

  private void menuEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditActionPerformed
    int baris = tbPokemon.getSelectedRow();

    if (baris != -1) {
      tfID.setText(tbPokemon.getValueAt(baris, 0).toString());
      tfPokedexID.setText(tbPokemon.getValueAt(baris, 1).toString());
      tfNama.setText(tbPokemon.getValueAt(baris, 2).toString());
      tfTinggi.setText(tbPokemon.getValueAt(baris, 4).toString());
      tfBerat.setText(tbPokemon.getValueAt(baris, 5).toString());

      String[] tipe = tbPokemon.getValueAt(baris, 3).toString().split(", ");
      cbTipe1.getModel().setSelectedItem(tipe[0]);
      if (tipe.length == 2) {
        cbTipe2.getModel().setSelectedItem(tipe[1]);
      }

      String[] kemampuan = tbPokemon.getValueAt(baris, 6).toString().split(", ");
      cbKemampuan1.getModel().setSelectedItem(kemampuan[0]);
      if (kemampuan.length == 2) {
        cbKemampuan1.getModel().setSelectedItem(kemampuan[1]);
      }

      tfTipePokemonID.setText(tbPokemon.getValueAt(baris, 7).toString());
      tfKemampuanPokemonID.setText(tbPokemon.getValueAt(baris, 8).toString());

      showDialog("Edit Pok√©mon", true);
    }
  }//GEN-LAST:event_menuEditActionPerformed

  private void menuHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuHapusActionPerformed
    if (tbPokemon.getSelectedRow() != -1) {
      int baris = tbPokemon.getSelectedRow();
      hapusPokemon(baris);
    }
  }//GEN-LAST:event_menuHapusActionPerformed

  private void tbPokemonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPokemonMouseReleased
    if (evt.isPopupTrigger()) {
      JTable source = (JTable) evt.getSource();
      int row = source.rowAtPoint(evt.getPoint());
      int column = source.columnAtPoint(evt.getPoint());

      if (!source.isRowSelected(row)) {
        source.changeSelection(row, column, false, false);
      }
      popUpTabel.show(evt.getComponent(), evt.getX(), evt.getY());
    }
  }//GEN-LAST:event_tbPokemonMouseReleased

  private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
    clearField();
  }//GEN-LAST:event_btnClearActionPerformed

  private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
    if (!isUpdate) {
      tambahPokemon();
    } else {
      ubahPokemon();
    }
  }//GEN-LAST:event_btnSimpanActionPerformed


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btnClear;
  private javax.swing.JButton btnSimpan;
  private javax.swing.JButton btnTambah;
  private javax.swing.JComboBox<ComboBoxItem> cbKemampuan1;
  private javax.swing.JComboBox<ComboBoxItem> cbKemampuan2;
  private javax.swing.JComboBox<ComboBoxItem> cbTipe;
  private javax.swing.JComboBox<ComboBoxItem> cbTipe1;
  private javax.swing.JComboBox<ComboBoxItem> cbTipe2;
  private javax.swing.JDialog dlgPokemon;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel10;
  private javax.swing.JLabel jLabel11;
  private javax.swing.JLabel jLabel12;
  private javax.swing.JLabel jLabel13;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JLabel jLabel9;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JLabel labelJudulDialog;
  private javax.swing.JLabel lblKemampuanPokemonId;
  private javax.swing.JLabel lblTipePokemonId;
  private javax.swing.JMenuItem menuEdit;
  private javax.swing.JMenuItem menuHapus;
  private javax.swing.JPopupMenu popUpTabel;
  private javax.swing.JScrollPane scrollPane;
  private javax.swing.JTable tbPokemon;
  private javax.swing.JTextField tfBerat;
  private javax.swing.JTextField tfCariNama;
  private javax.swing.JTextField tfID;
  private javax.swing.JTextField tfKemampuanPokemonID;
  private javax.swing.JTextField tfNama;
  private javax.swing.JTextField tfPokedexID;
  private javax.swing.JTextField tfTinggi;
  private javax.swing.JTextField tfTipePokemonID;
  // End of variables declaration//GEN-END:variables

  private void handleFilters() {
    String keyword = tfCariNama.getText();
    int index = cbTipe.getSelectedIndex();
    String tipeNama = (index != -1 && index < cbTipe.getItemCount()) ? cbTipe.getItemAt(index).getNama() : "";

    pc.readDataTable(keyword, tipeNama, tpc);
  }

  private void showDialog(String judul, boolean isUpdate) {
    if (isUpdate) {
      this.isUpdate = true;
    }
    labelJudulDialog.setText(judul);
    dlgPokemon.setLocationRelativeTo(null);
    dlgPokemon.setVisible(true);
  }

  private void disposeDialog() {
    dlgPokemon.setVisible(false);
    dlgPokemon.dispose();
  }

  private void getID() {
    try {
      List<Map<String, Object>> getData = qe.querySelect("SELECT `id` FROM `pokemon` ORDER BY `id` DESC LIMIT 1");
      int id = Integer.parseInt(getData.get(0).get("id").toString()) + 1;
      nextID = id;
      tfID.setText(String.valueOf(id));
    } catch (SQLException e) {
      System.err.println("Error in getID: " + e.getMessage());
    }
  }

  private void addComboBoxItem(JComboBox<ComboBoxItem> comboBox, String tabel, boolean isFromJFrame) {
    comboBox.removeAllItems();
    if (isFromJFrame) {
      comboBox.addItem(new ComboBoxItem(0, "Semua"));
    } else {
      comboBox.addItem(new ComboBoxItem(0, "-- Pilih " + ((tabel.equals("tipe")) ? "tipe" : "kemampuan") + " --"));
    }

    try {
      List<Map<String, Object>> dataList = qe.querySelect("SELECT `id`,`nama` FROM `" + tabel + "` ORDER BY `nama` ASC");

      for (Map<String, Object> row : dataList) {
        comboBox.addItem(
            new ComboBoxItem(
                Integer.parseInt(row.get("id").toString()),
                String.valueOf(row.get("nama"))
            )
        );
      }
    } catch (SQLException e) {
      System.err.println("Error in getID: " + e.getMessage());
    }

  }

  private void clearField() {
    tfPokedexID.setText("");
    tfNama.setText("");
    tfTinggi.setText("");
    tfBerat.setText("");
    cbTipe1.setSelectedIndex(0);
    cbTipe2.setSelectedIndex(0);
    cbKemampuan1.setSelectedIndex(0);
    cbKemampuan2.setSelectedIndex(0);
  }

  private void tambahPokemon() {
    List<Integer> tipeId = new ArrayList<>(),
        kemampuanId = new ArrayList<>();

    String id = tfID.getText();
    String pokedexID = tfPokedexID.getText();
    String nama = tfNama.getText();
    String tinggi = tfTinggi.getText();
    String berat = tfBerat.getText();
    int tipe1 = cbTipe1.getItemAt(cbTipe1.getSelectedIndex()).getId();
    int tipe2 = cbTipe2.getItemAt(cbTipe2.getSelectedIndex()).getId();
    int kemampuan1 = cbKemampuan1.getItemAt(cbKemampuan1.getSelectedIndex()).getId();
    int kemampuan2 = cbKemampuan2.getItemAt(cbKemampuan2.getSelectedIndex()).getId();

    if (pokedexID.isBlank()) {
      JOptionPane.showMessageDialog(rootPane, "Pokedex ID belum terisi!");
    } else if (nama.isBlank()) {
      JOptionPane.showMessageDialog(rootPane, "Nama Pokemon belum terisi!");
    } else if (tinggi.isBlank()) {
      JOptionPane.showMessageDialog(rootPane, "Tinggi Pokemon belum terisi!");
    } else if (berat.isBlank()) {
      JOptionPane.showMessageDialog(rootPane, "Berat Pokemon belum terisi!");
    } else if (tipe1 == 0) {
      JOptionPane.showMessageDialog(rootPane, "Tipe Pokemon ke-1 belum dipilih!");
    } else if (kemampuan1 == 0) {
      JOptionPane.showMessageDialog(rootPane, "Kemampuan Pokemon ke-1 belum dipilih!");
    } else {
      tipeId.add(tipe1);
      tipeId.add(tipe2);
      kemampuanId.add(kemampuan1);
      kemampuanId.add(kemampuan2);

      Pokemon p = new Pokemon(
          Integer.parseInt(id),
          Integer.parseInt(pokedexID),
          tipeId,
          nama,
          Float.parseFloat(tinggi),
          Float.parseFloat(berat),
          kemampuanId
      );

      if (pc.insert(p) == 1) {
        JOptionPane.showMessageDialog(null, "Data berhasil disimpan");
        tfPokedexID.requestFocus();
        pc.readDataTable("", "", tpc);
      } else {
        JOptionPane.showMessageDialog(null, "Data gagal disimpan");
      }
    }
  }

  private void ubahPokemon() {
    List<Integer> tipeId = new ArrayList<>(),
        kemampuanId = new ArrayList<>(),
        tipePokemon = new ArrayList<>(),
        kemampuanPokemon = new ArrayList<>();

    String id = tfID.getText();
    String pokedexID = tfPokedexID.getText();
    String nama = tfNama.getText();
    String tinggi = tfTinggi.getText();
    String berat = tfBerat.getText();
    int tipe1 = cbTipe1.getItemAt(cbTipe1.getSelectedIndex()).getId();
    int tipe2 = cbTipe2.getItemAt(cbTipe2.getSelectedIndex()).getId();
    int kemampuan1 = cbKemampuan1.getItemAt(cbKemampuan1.getSelectedIndex()).getId();
    int kemampuan2 = cbKemampuan2.getItemAt(cbKemampuan2.getSelectedIndex()).getId();
    String[] tipePokemonID = tfTipePokemonID.getText().split(", ");
    String[] kemampuanPokemonID = tfKemampuanPokemonID.getText().split(", ");

    if (pokedexID.isBlank()) {
      JOptionPane.showMessageDialog(rootPane, "Pokedex ID belum terisi!");
    } else if (nama.isBlank()) {
      JOptionPane.showMessageDialog(rootPane, "Nama Pokemon belum terisi!");
    } else if (tinggi.isBlank()) {
      JOptionPane.showMessageDialog(rootPane, "Tinggi Pokemon belum terisi!");
    } else if (berat.isBlank()) {
      JOptionPane.showMessageDialog(rootPane, "Berat Pokemon belum terisi!");
    } else if (tipe1 == 0) {
      JOptionPane.showMessageDialog(rootPane, "Tipe Pokemon ke-1 belum dipilih!");
    } else if (kemampuan1 == 0) {
      JOptionPane.showMessageDialog(rootPane, "Kemampuan Pokemon ke-1 belum dipilih!");
    } else {
      tipeId.add(tipe1);
      tipeId.add(tipe2);
      kemampuanId.add(kemampuan1);
      kemampuanId.add(kemampuan2);
      tipePokemon.add(Integer.valueOf(tipePokemonID[0]));
      if (tipePokemonID.length == 2) {
        tipePokemon.add(Integer.valueOf(tipePokemonID[1]));
      }
      kemampuanPokemon.add(Integer.valueOf(kemampuanPokemonID[0]));
      if (kemampuanPokemonID.length == 2) {
        kemampuanPokemon.add(Integer.valueOf(kemampuanPokemonID[1]));
      }

      Pokemon p = new Pokemon(
          Integer.parseInt(id),
          Integer.parseInt(pokedexID),
          tipeId,
          tipePokemon,
          nama,
          Float.parseFloat(tinggi),
          Float.parseFloat(berat),
          kemampuanId,
          kemampuanPokemon
      );

      if (pc.update(p) == 1) {
        JOptionPane.showMessageDialog(null, "Data berhasil diubah");
        disposeDialog();
        getID();
        pc.readDataTable("", "", tpc);
        isUpdate = false;
      } else {
        JOptionPane.showMessageDialog(null, "Data gagal diubah");
      }
    }
  }

  private void hapusPokemon(int baris) {
    String id = tbPokemon.getValueAt(baris, 0).toString();
    String nama = tbPokemon.getValueAt(baris, 2).toString();

    int dialogResult = JOptionPane.showConfirmDialog(
        this,
        "Hapus Pok√©mon " + nama + "?",
        "Hapus Pok√©mon",
        JOptionPane.YES_NO_OPTION);
    if (dialogResult == JOptionPane.YES_OPTION) {
      Pokemon p = new Pokemon();
      p.setId(Integer.parseInt(id));

      if (pc.delete(p) == 1) {
        JOptionPane.showMessageDialog(null, "Data berhasil dihapus");
        disposeDialog();
        pc.readDataTable("", "", tpc);
      } else {
        JOptionPane.showMessageDialog(null, "Data gagal dihapus");
      }
    }

  }

}
